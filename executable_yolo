#!/bin/bash

# YOLO - Run AI coding agents with appropriate bypass flags

# Function to show help message
show_help() {
    echo "YOLO - Run AI coding agents with appropriate bypass flags"
    echo ""
    echo "Usage: yolo [OPTIONS] COMMAND [ARGS...]"
    echo ""
    echo "Options:"
    echo "  -w, --worktree    Create a git worktree before running the command"
    echo "  -h, --help        Show this help message"
    echo ""
    echo "Supported Commands:"
    echo "  codex             Anthropic Code (adds --dangerously-bypass-approvals-and-sandbox)"
    echo "  claude            Claude Code (adds --dangerously-skip-permissions)"
    echo "  copilot           GitHub Copilot (adds --allow-all-tools --allow-all-paths)"
    echo "  droid             Factory AI Droid (adds --skip-permissions-unsafe)"
    echo "  amp               Sourcegraph Amp (adds --dangerously-allow-all)"
    echo "  cursor-agent      Cursor Agent (adds --force)"
    echo "  <other>           Any other command (adds --yolo)"
    echo ""
    echo "Examples:"
    echo "  yolo claude "Fix the bug in src/main.js""
    echo "  yolo -w droid "Refactor the authentication module""
    echo "  yolo codex --help"
}

# Main script
WORKTREE=false
if [ "$1" = "-w" ] || [ "$1" = "--worktree" ]; then
    WORKTREE=true
    shift
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    show_help
    exit 0
fi

if [ -z "$1" ]; then
    echo "Error: missing command argument"
    show_help
    exit 1
fi

COMMAND="$1"
shift

if [ "$WORKTREE" = true ]; then
    BRANCH_NAME="yolo-$(date +%s)"
    git worktree add -b "$BRANCH_NAME" ".yolo/$BRANCH_NAME"
    cd ".yolo/$BRANCH_NAME"
fi

case "$COMMAND" in
    codex)
        exec codex --dangerously-bypass-approvals-and-sandbox "$@"
        ;;
    claude)
        exec claude --dangerously-skip-permissions "$@"
        ;;
    copilot)
        exec copilot --allow-all-tools --allow-all-paths "$@"
        ;;
    droid)
        exec droid --skip-permissions-unsafe "$@"
        ;;
    amp)
        exec amp --dangerously-allow-all "$@"
        ;;
    cursor-agent)
        exec cursor-agent --force "$@"
        ;;
    *)
        exec "$COMMAND" --yolo "$@"
        ;;
esac